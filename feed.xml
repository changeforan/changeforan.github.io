<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="https://blog.bosscang.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://blog.bosscang.com/" rel="alternate" type="text/html" /><updated>2023-03-18T13:43:30+00:00</updated><id>https://blog.bosscang.com/feed.xml</id><title type="html">Bosscang’s Blog</title><subtitle>Welcome to Bosscang's blog!</subtitle><entry><title type="html">中国球王 夏文良</title><link href="https://blog.bosscang.com/game/2020/10/07/Xiawenliang.html" rel="alternate" type="text/html" title="中国球王 夏文良" /><published>2020-10-07T00:00:00+00:00</published><updated>2020-10-07T00:00:00+00:00</updated><id>https://blog.bosscang.com/game/2020/10/07/Xiawenliang</id><content type="html" xml:base="https://blog.bosscang.com/game/2020/10/07/Xiawenliang.html">&lt;p&gt;唤&lt;strong&gt;夏文良&lt;/strong&gt;作球王，绝对不是中国球迷的戏谑，他就是中国的球王，放眼亚洲也能当此殊荣。可惜的是终其职业生涯19载，没能去欧洲五大联赛一试身手，实在是一大憾事。&lt;/p&gt;
&lt;p&gt;时间回到2018-19赛季，夏文良向世界证明，中国足球一样拥有天才！17岁的夏文良，踢出了27场23球20助攻的成绩，带领苏宁勇夺中超冠军，并一举囊括了当年中超&lt;strong&gt;本土最佳射手&lt;/strong&gt;，&lt;strong&gt;中超年度最佳球员&lt;/strong&gt;，&lt;strong&gt;中超最受欢迎本土球员&lt;/strong&gt;三个奖项。对于一个未满18岁的小将，不可不谓天才。他是上天赐予当时处于历史低谷的中国足球的礼物。&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;而在亚冠赛场上，夏文良同样可谓一鸣惊人，以11场9球7助攻的骄人战绩赢得了2019年亚冠&lt;strong&gt;最有价值球员&lt;/strong&gt;以及&lt;strong&gt;最佳射手&lt;/strong&gt;两项殊荣。在2018-2031的13年间，夏文良带领苏宁队8次获得&lt;strong&gt;亚冠联赛冠军&lt;/strong&gt;，9次夺得&lt;strong&gt;中超联赛冠军&lt;/strong&gt;，3次夺得&lt;strong&gt;足协杯冠军&lt;/strong&gt;，7次&lt;strong&gt;超霸杯冠军&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;国家队层面，2018年3月，中国对卡塔尔比赛中，夏文良首次代表国家队登场，创下了新的中国队上场最年轻球员记录，这个记录直到8年后才被16岁153天的&lt;em&gt;韦硕&lt;/em&gt;打破。同年率队获得&lt;strong&gt;U23亚洲杯冠军&lt;/strong&gt;，2019-2031年间3次获得&lt;strong&gt;亚洲杯冠军&lt;/strong&gt;。尤其在2022年，成功带领中国队时隔20年再次走出亚洲，冲进世界杯，彼时年仅21岁。其职业生涯为中国队出场一共138次，打入62粒进球，大幅度打破了此前由郝某某保持的41球记录。当然韦硕将此记录提升到了121球，几乎翻了一番，这是后话。&lt;/p&gt;
&lt;p&gt;夏文良凭借自己的才华与成就获得多项荣誉，让我们一起来数一数：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1次U23亚青赛最有价值球员、2次中超年度最佳球员、4次中超年度最佳年轻球员、8次中超最受欢迎本土球员、1次中超金靴奖、5次中超本土最佳射手、3次亚冠金靴奖、2次亚冠最有价值球员、1次亚洲杯金靴、4次亚洲足球先生。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为苏宁出场509次，打入242球，值得一提的是，他的整个职业生涯都献给了江苏苏宁。&lt;/p&gt;
&lt;p&gt;司职突前前锋的夏文良在场上同时可以胜任右边锋的角色，其技术特点是抢点能力出色，把握机会能力强，性格冷静沉着，有一脚出色的射门，传中能力也很不错。职业生涯初期与高中锋&lt;em&gt;刘斌&lt;/em&gt;组成一高一快的组合，成为江苏苏宁大杀四方的锋线利器。生涯末期，逐渐让出国家队主力中锋的位置，转而来到右路，依然有着亮眼发挥，至今仍是中国国家队历史最佳阵容中的右边锋。&lt;/p&gt;
&lt;p&gt;才华横溢的夏文良可谓是中国足球历史上横空出世的天才，把中国球员能在国内以及亚洲范围内能取得的成就拔高到了一个新的高度，但他同样是出道即巅峰，在俱乐部及国家队层面上能取得的最高荣誉在其职业生涯初期就已经纳入囊中，8座亚冠+3座亚洲杯冠军让他成为那个时代无可争议的亚洲第一人，但似乎这也就是他的极限了。也许是太过于顺利的职业生涯，也许是对苏宁队太过执着的赤胆忠心，夏文良始终没有离开过这家俱乐部，当欧洲豪门的球探轮番上门，挤破苏宁的办公室；当他的恩师在国际米兰向他抛来橄榄枝时，因为种种原因，夏文良的欧洲之旅始终未能成行，他也始终未能在更高的比赛舞台上证明自己。&lt;/p&gt;
&lt;p&gt;但毫无疑问的是，夏文良是中国足球这黄金20年里的先行者，是中国足球站上亚洲之巅的领路人，他是苏宁的球王，中国的球王。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;待续：&lt;/p&gt;
&lt;p&gt;中国的卡纳瓦罗 - 张祥&lt;/p&gt;
&lt;p&gt;毫无疑问的国际巨星 - 韦硕&lt;/p&gt;
&lt;p&gt;一时瑜亮 - 肖克贝&lt;/p&gt;</content><author><name>bosscang</name></author><category term="game" /><category term="footballmanager" /><category term="game" /><summary type="html">唤夏文良作球王，绝对不是中国球迷的戏谑，他就是中国的球王，放眼亚洲也能当此殊荣。可惜的是终其职业生涯19载，没能去欧洲五大联赛一试身手，实在是一大憾事。</summary></entry><entry><title type="html">用分治找出落单的数</title><link href="https://blog.bosscang.com/programming/2018/01/07/single-number.html" rel="alternate" type="text/html" title="用分治找出落单的数" /><published>2018-01-07T00:00:00+00:00</published><updated>2018-01-07T00:00:00+00:00</updated><id>https://blog.bosscang.com/programming/2018/01/07/single-number</id><content type="html" xml:base="https://blog.bosscang.com/programming/2018/01/07/single-number.html">&lt;p&gt;&lt;a href=&quot;http://www.lintcode.com/zh-cn/problem/single-number/&quot;&gt;落单的数&lt;/a&gt;是一道很有趣的算法题，题目如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给出2*n + 1 个的数字，除其中一个数字之外其他每个数字均出现两次，找到这个数字。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;$ O(N^2) $ 的解法是显而易见的，如果加上时间复杂度 $ O(N) $ 的限制，问题就有些麻烦，好在我们可以使用HashMap来满足要求，但再加上空间复杂度$ O(1) $ 的要求，这道题目就变得棘手了。
此题最常见也是最经典的解法是使用&lt;em&gt;异或&lt;/em&gt;运算，这是一个很有技巧的方法，涉及到异或运算的性质，如果你不了解异或运算，那不妨参考下使用分治算法的解法。毕竟相比之下，分治的思想更深入人心。&lt;/p&gt;
&lt;!--more--&gt;
&lt;pre&gt;&lt;code&gt;//伪代码
FIND-SINGLE-NUMBER(A,low,high)
1 while (low &amp;lt; hight)
2   k = PARTITION(A,low,high)
3   if (k-low) mod 2 == 1
4 	  high = k-1
5   else low = k
6 return A[low]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;算法的核心在于第三行的PARTITION, 这里的PARTITION其实就是快排算法的第一步，每次在A[low]和A[high]之间随机选取一个值作为中心值，通过$O(N)$复杂的PARTITION，将A分为左右两个部分，左边部分严格小于中心值，右边部分大于等于中心值；对于分割完毕的两部分，落单的值一定在元素个数为奇数的一边，所以对这一边进行递归操作，直到找出这个落单的值。因为采用了随机化的PARTITION可以证明该算法的时间复杂度为$O(N)$，在这里我们假设每次分割都近乎平均，那么算法运行时间的递归式为：
$$
T(n) = T(n/2) + \Theta(n)
$$
根据主定理（算法导论第三版，定理4.1）可以解得
$$
T(n) = \Theta(n)
$$
为了更有力地说服这个算法时间复杂度是$ O(N) $的，特绘制异或算法与分治算法随n增大时的时间图像。
&lt;img src=&quot;https://blog.bosscang.com/img/singlenumber.png&quot; alt=&quot;Alert text&quot; /&gt;
可以看到，相比于异或算法，分治算法的耗时确实更多，但的的确确是$ O(N) $的时间复杂度。&lt;/p&gt;
&lt;p&gt;至于空间复杂度，在采用递归写法时，并不是一个常数，不过因为是尾递归，很容易改写成loop形式，此时的空间复杂度严格为常数。&lt;/p&gt;
&lt;p&gt;Python代码：&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;typing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;singleNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;low&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;low&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;low&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pivot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pivot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;split&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;split&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>bosscang</name></author><category term="programming" /><category term="algorithm" /><category term="java" /><summary type="html">落单的数是一道很有趣的算法题，题目如下 给出2*n + 1 个的数字，除其中一个数字之外其他每个数字均出现两次，找到这个数字。 $ O(N^2) $ 的解法是显而易见的，如果加上时间复杂度 $ O(N) $ 的限制，问题就有些麻烦，好在我们可以使用HashMap来满足要求，但再加上空间复杂度$ O(1) $ 的要求，这道题目就变得棘手了。 此题最常见也是最经典的解法是使用异或运算，这是一个很有技巧的方法，涉及到异或运算的性质，如果你不了解异或运算，那不妨参考下使用分治算法的解法。毕竟相比之下，分治的思想更深入人心。 //伪代码 FIND-SINGLE-NUMBER(A,low,high) 1 while (low &amp;lt; hight) 2 k = PARTITION(A,low,high) 3 if (k-low) mod 2 == 1 4 high = k-1 5 else low = k 6 return A[low] 算法的核心在于第三行的PARTITION, 这里的PARTITION其实就是快排算法的第一步，每次在A[low]和A[high]之间随机选取一个值作为中心值，通过$O(N)$复杂的PARTITION，将A分为左右两个部分，左边部分严格小于中心值，右边部分大于等于中心值；对于分割完毕的两部分，落单的值一定在元素个数为奇数的一边，所以对这一边进行递归操作，直到找出这个落单的值。因为采用了随机化的PARTITION可以证明该算法的时间复杂度为$O(N)$，在这里我们假设每次分割都近乎平均，那么算法运行时间的递归式为： $$ T(n) = T(n/2) + \Theta(n) $$ 根据主定理（算法导论第三版，定理4.1）可以解得 $$ T(n) = \Theta(n) $$ 为了更有力地说服这个算法时间复杂度是$ O(N) $的，特绘制异或算法与分治算法随n增大时的时间图像。 可以看到，相比于异或算法，分治算法的耗时确实更多，但的的确确是$ O(N) $的时间复杂度。 至于空间复杂度，在采用递归写法时，并不是一个常数，不过因为是尾递归，很容易改写成loop形式，此时的空间复杂度严格为常数。 Python代码： import random from typing import List</summary></entry><entry><title type="html">FIFA Online 3 强化概率模型推导</title><link href="https://blog.bosscang.com/research/2017/10/26/fifaol3.html" rel="alternate" type="text/html" title="FIFA Online 3 强化概率模型推导" /><published>2017-10-26T00:00:00+00:00</published><updated>2017-10-26T00:00:00+00:00</updated><id>https://blog.bosscang.com/research/2017/10/26/fifaol3</id><content type="html" xml:base="https://blog.bosscang.com/research/2017/10/26/fifaol3.html">&lt;p&gt;今年4月24日，腾讯游戏公布了 FIFA Online 3 的强化概率（&lt;a href=&quot;http://eafifa.qq.com/webplat/info/news_version3/6241/6242/6243/m4639/201704/576522.shtml&quot;&gt;原文链接&lt;/a&gt;）。这份公式首先写的十分晦涩，总结下来已经公布的强化概率如下表所示:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.bosscang.com/img/fifaol3_1.png&quot; alt=&quot;enter image description here&quot; /&gt;&lt;/p&gt;
&lt;p&gt;其次，不知是出于什么目的，腾讯没有公布3+2，4+2，4+3，以及5强以上的所有强化概率，因此本文将首先探讨这个游戏背后的强化概率模型，并对5强以上的强化概率进行预测。&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id=&quot;section&quot;&gt;计算原理&lt;/h2&gt;
&lt;p&gt;首先，我们提出一个假设，叫做“成本等价”，即“得到1张高强卡所需消耗的1强卡数量期望与强化路径无关”。举个例子，假如我们有1000张1强卡，想全部强化成3强卡，那么有两种强化路径，一是先全部合成2强卡，再由2强卡与2强卡强化得到3强卡；二是先部分强化成2强卡，然后将2强卡与1强卡强化得到3强卡。分别计算这两种方式：&lt;/p&gt;
&lt;h3 id=&quot;section-1&quot;&gt;路径1&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;将1强卡全部强化为2强，强化500次，成功概率是0.75，可以得到375张2强卡；将2强卡全部强化为3强，强化187.5次，成功概率0.6545，可以得到122.71875张3强卡&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;section-2&quot;&gt;路径2&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;将727.27272张1强卡强化为2强，强化363.36363次，成功概率0.75，得到272.72727张2强卡，将这些2强卡与剩下的272.72727张1强卡强化，成功概率0.45，得到122.727张3强卡&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以看到，两种强化方式最终得到的3强卡数量都约等于122.72张（其实严格相等，误差来自于2+2成功概率的不精确），即每得到一张3强卡，大约需要消耗8.15张1强卡，即所谓的成本等价。&lt;/p&gt;
&lt;h2 id=&quot;section-3&quot;&gt;1-5强概率计算&lt;/h2&gt;
&lt;p&gt;在“成本等价”的前提下，只需已知N强卡与1强卡强化的成功概率，就可以计算出N强卡与1~N-1强卡强化的成功概率。&lt;/p&gt;
&lt;p&gt;用 $ P(n,k),1 \le k \lt n $ 表示$ n $强卡与$ k $强卡强化的成功概率，用 $ f(n) $ 表示得到一张n强卡需要消耗的1强卡数量，已知&lt;/p&gt;
&lt;p&gt;$$
\begin{cases}
P(1,1)=0.75 \\
P(2,1)=0.45 \\
P(3,1)=0.3 \\
P(4,1)=0.25 \\
f(1)=1
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;假设使用一张 n-1强卡与一张k强卡强化，有$ P(n-1,k) $的概率强化成功，此时消耗了$ f(n-1)+f(k) $张1强卡；有$ 1-P(n-1,k) $的概率强化失败，此时已经消耗了$ f(n-1)+f(k) $张1强卡，但是因为强化失败，为了得到 n 强卡，还需要$ f(n) $张1强卡。故有&lt;/p&gt;
&lt;p&gt;$$
f(n)=P(n-1,k) \times (f(n-1) + f(k)) + (1-P(n-1,k)) \times (f(n-1)+f(k)+f(n))
$$&lt;/p&gt;
&lt;p&gt;即&lt;/p&gt;
&lt;p&gt;$$
f(n)=f(n-1)+f(k)+(1-P(n-1,k))\times f(n)
$$&lt;/p&gt;
&lt;p&gt;即&lt;/p&gt;
&lt;p&gt;$$
f(n)={f(n-1)+f(k) \over P(n-1,k)}
$$&lt;/p&gt;
&lt;p&gt;计算得&lt;/p&gt;
&lt;p&gt;$$
\begin{cases}
f(2)={8 \over 3} \\
f(3)={220 \over 27} \\
f(4)={2470 \over 81} \\
f(5)={10204 \over 81} \\
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;以及&lt;/p&gt;
&lt;p&gt;$$
\begin{cases}
P(2,2)={36 \over 55} \approx 0.6545 \\
P(3,2)={438 \over 1235} \approx 0.3547 \\
P(3,3)={132 \over 247} \approx 0.5344 \\
P(4,2)={1343 \over 5102} \approx 0.2632 \\
P(4,3)={1565\over 5102} \approx 0.3067 \\
P(4,4)={1235\over 2551} \approx 0.4841 \\
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;至此我们计算出了所有5强以内的强化概率&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.bosscang.com/img/fifaol3_2.png&quot; alt=&quot;enter image description here&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;section-4&quot;&gt;6-10强概率估测&lt;/h2&gt;
&lt;p&gt;如上文所示，任意强卡与1强卡的强化成功率是游戏运营人员配置，这是不难解释为什么1+1，2+1，3+1，4+1分别是75%，45%，30%，25%这类整数值，而其余概率则根据“成本等价”原则计算。
因为腾讯没有公布5+1,6+1,7+1,8+1,9+1的概率，这部分内容只能是本人的一些预测。
显然随着强化等级的提高，与1强卡强化的成功率呈下降趋势，将已有的数据使用乘幂曲线拟合&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.bosscang.com/img/fifaol3_3.jpg&quot; alt=&quot;enter image description here&quot; /&gt;&lt;/p&gt;
&lt;p&gt;由此对5~9强卡与1强卡的强化概率进行估算，进一步估算出所有的强化概率&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog.bosscang.com/img/fifaol3_4.png&quot; alt=&quot;enter image description here&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;section-5&quot;&gt;附1&lt;/h2&gt;
&lt;p&gt;概率计算源码&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Fifaol3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[][]&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init_P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.75&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.45&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.25&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init_f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calc_P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.7585&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.809&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;calc_f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;init_P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;init_f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;calc_P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;calc_f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;}&lt;/span&gt;
                &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;卡1: %d 强 + 卡2: %d 强 -------&amp;gt; %.4f%%&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(注:以上数据中5强开始为预测值,5强内为准确值)&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;section-6&quot;&gt;附2&lt;/h2&gt;
&lt;p&gt;不负责任的猜测：腾讯的公示为什么写的这么晦涩，为什么不公布其余强化的概率？因为按照“成本等价”计算，高强中卡等级的提升对成功概率的提升非常微弱，例如7+1到7+4的成功概率几乎是一样的。&lt;/p&gt;</content><author><name>bosscang</name></author><category term="research" /><category term="algorithm" /><category term="game" /><summary type="html">今年4月24日，腾讯游戏公布了 FIFA Online 3 的强化概率（原文链接）。这份公式首先写的十分晦涩，总结下来已经公布的强化概率如下表所示: 其次，不知是出于什么目的，腾讯没有公布3+2，4+2，4+3，以及5强以上的所有强化概率，因此本文将首先探讨这个游戏背后的强化概率模型，并对5强以上的强化概率进行预测。 计算原理 首先，我们提出一个假设，叫做“成本等价”，即“得到1张高强卡所需消耗的1强卡数量期望与强化路径无关”。举个例子，假如我们有1000张1强卡，想全部强化成3强卡，那么有两种强化路径，一是先全部合成2强卡，再由2强卡与2强卡强化得到3强卡；二是先部分强化成2强卡，然后将2强卡与1强卡强化得到3强卡。分别计算这两种方式： 路径1 将1强卡全部强化为2强，强化500次，成功概率是0.75，可以得到375张2强卡；将2强卡全部强化为3强，强化187.5次，成功概率0.6545，可以得到122.71875张3强卡 路径2 将727.27272张1强卡强化为2强，强化363.36363次，成功概率0.75，得到272.72727张2强卡，将这些2强卡与剩下的272.72727张1强卡强化，成功概率0.45，得到122.727张3强卡 可以看到，两种强化方式最终得到的3强卡数量都约等于122.72张（其实严格相等，误差来自于2+2成功概率的不精确），即每得到一张3强卡，大约需要消耗8.15张1强卡，即所谓的成本等价。 1-5强概率计算 在“成本等价”的前提下，只需已知N强卡与1强卡强化的成功概率，就可以计算出N强卡与1~N-1强卡强化的成功概率。 用 $ P(n,k),1 \le k \lt n $ 表示$ n $强卡与$ k $强卡强化的成功概率，用 $ f(n) $ 表示得到一张n强卡需要消耗的1强卡数量，已知 $$ \begin{cases} P(1,1)=0.75 \\ P(2,1)=0.45 \\ P(3,1)=0.3 \\ P(4,1)=0.25 \\ f(1)=1 \end{cases} $$ 假设使用一张 n-1强卡与一张k强卡强化，有$ P(n-1,k) $的概率强化成功，此时消耗了$ f(n-1)+f(k) $张1强卡；有$ 1-P(n-1,k) $的概率强化失败，此时已经消耗了$ f(n-1)+f(k) $张1强卡，但是因为强化失败，为了得到 n 强卡，还需要$ f(n) $张1强卡。故有 $$ f(n)=P(n-1,k) \times (f(n-1) + f(k)) + (1-P(n-1,k)) \times (f(n-1)+f(k)+f(n)) $$ 即 $$ f(n)=f(n-1)+f(k)+(1-P(n-1,k))\times f(n) $$ 即 $$ f(n)={f(n-1)+f(k) \over P(n-1,k)} $$ 计算得 $$ \begin{cases} f(2)={8 \over 3} \\ f(3)={220 \over 27} \\ f(4)={2470 \over 81} \\ f(5)={10204 \over 81} \\ \end{cases} $$ 以及 $$ \begin{cases} P(2,2)={36 \over 55} \approx 0.6545 \\ P(3,2)={438 \over 1235} \approx 0.3547 \\ P(3,3)={132 \over 247} \approx 0.5344 \\ P(4,2)={1343 \over 5102} \approx 0.2632 \\ P(4,3)={1565\over 5102} \approx 0.3067 \\ P(4,4)={1235\over 2551} \approx 0.4841 \\ \end{cases} $$ 至此我们计算出了所有5强以内的强化概率 6-10强概率估测 如上文所示，任意强卡与1强卡的强化成功率是游戏运营人员配置，这是不难解释为什么1+1，2+1，3+1，4+1分别是75%，45%，30%，25%这类整数值，而其余概率则根据“成本等价”原则计算。 因为腾讯没有公布5+1,6+1,7+1,8+1,9+1的概率，这部分内容只能是本人的一些预测。 显然随着强化等级的提高，与1强卡强化的成功率呈下降趋势，将已有的数据使用乘幂曲线拟合 由此对5~9强卡与1强卡的强化概率进行估算，进一步估算出所有的强化概率 附1 概率计算源码 public class Fifaol3 { private static double[][] P = new double[10][10]; private static double[] f = new double[11]; private static void init_P() { P[1][1] = 0.75; P[2][1] = 0.45; P[3][1] = 0.3; P[4][1] = 0.25; } private static void init_f() { f[1] = 1; }</summary></entry><entry><title type="html">大酋长的脱非入欧之旅</title><link href="https://blog.bosscang.com/programming/2017/04/08/lengendaryitems.html" rel="alternate" type="text/html" title="大酋长的脱非入欧之旅" /><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><id>https://blog.bosscang.com/programming/2017/04/08/lengendaryitems</id><content type="html" xml:base="https://blog.bosscang.com/programming/2017/04/08/lengendaryitems.html">&lt;blockquote&gt;
&lt;p&gt;题目链接：&lt;a href=&quot;http://hihocoder.com/problemset/problem/1489&quot;&gt;#1489 : Legendary Items&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;section&quot;&gt;问题描述&lt;/h2&gt;
&lt;p&gt;本题介绍了一个很实用的游戏物品获取机制，每当玩家完成一个任务，会有一定的概率获取一件传说装备，虽然题目中是通过完成任务来获取传说装备，但同样适用类似于通过开卡包来获得 SSR 卡的游戏。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;玩家的初始获取概率为 $ P $.&lt;/li&gt;
&lt;li&gt;每失败一次，获取概率会在当前基础上提高 $ Q $ 但最高不会超过$ 100\% $.&lt;/li&gt;
&lt;li&gt;每获得一件传说装备，获取概率变为$ \lfloor {P \over {2^I}} \rfloor $ ，其中$ I $是玩家当前获得的传说装备总数.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该机制的特点保证了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;玩家获取传说装备总是越来越难&lt;/li&gt;
&lt;li&gt;玩家只要不停的完成任务，总是能获取传说装备&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;求解，在已知$ P, Q $的情况下，一个玩家集齐$ N $件传说装备所需要完成的任务数的期望值。也就是问一个非洲大酋长要想集齐 SSR，需要开多少个卡包呢。&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id=&quot;section-1&quot;&gt;解题思路&lt;/h2&gt;
&lt;p&gt;用 $ f(x,i,n) $ 表示初始概率为$ x $，已经获得了$ i $件装备，需要收集$ n $件装备所需完成任务数的期望值，那么 $ f(P,0,N) $ 即为本题答案。
完成当前任务使任务数加 1, 当前任务完成后，有$ x $的几率获得一件装备，$ 1-x $的几率没有获得，故&lt;/p&gt;
&lt;p&gt;$$
f(x,i,n)=1+x \cdot f({\lfloor  {P \over {2^{i+1}}} \rfloor},i+1,n)+(1-x) \cdot f(x+Q &amp;gt; 1 ? 1 : x+Q,i, n)
$$&lt;/p&gt;
&lt;p&gt;当$ i=n 时，f(x,i,n)=0 $，根据以上公式不难写出递归求解程序，注意到 $ n $ 在公式两边是不变的，所以函数参数实际上只需要两个。&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LegendaryItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	 &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	 &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;Scanner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;no&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;no&quot;&gt;Q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;no&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%.2f&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
	 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	 &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;tmp1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;tmp2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;section-2&quot;&gt;算法优化&lt;/h2&gt;
&lt;p&gt;虽然这个解法答案是正确的，但是严重超时，即使使用了动态规划常见的打表法进行优化。
优化的关键在于，当一个玩家已经获得了 7 件装备后，他下一个任务完成后获得装备的概率一定是 0。且此后玩家每需获得一件装备所需完成的任务数期望都是一样的。因此，当$ N &amp;gt; 7 $ 时，可以理解成先获取 7 件装备，此后的$ N-7 $件装备的任务数期望是 $ f(0,6,7) $的$ N-7 $倍。$ f(0,6,7) $表示概率为0时，再获取一件装备的任务期望数。&lt;/p&gt;
&lt;p&gt;$$
f(x,0,n)=f(x,0,7)+(n-7) \times f(0,6,7)
$$&lt;/p&gt;
&lt;h2 id=&quot;ac-&quot;&gt;AC 代码&lt;/h2&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LegendaryItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[][]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;Scanner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;no&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;no&quot;&gt;Q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;no&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;no&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%.2f&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%.2f&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;tmp1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;tmp2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;}&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>bosscang</name></author><category term="programming" /><category term="algorithm" /><category term="math" /><summary type="html">题目链接：#1489 : Legendary Items 问题描述 本题介绍了一个很实用的游戏物品获取机制，每当玩家完成一个任务，会有一定的概率获取一件传说装备，虽然题目中是通过完成任务来获取传说装备，但同样适用类似于通过开卡包来获得 SSR 卡的游戏。 玩家的初始获取概率为 $ P $. 每失败一次，获取概率会在当前基础上提高 $ Q $ 但最高不会超过$ 100\% $. 每获得一件传说装备，获取概率变为$ \lfloor {P \over {2^I}} \rfloor $ ，其中$ I $是玩家当前获得的传说装备总数. 该机制的特点保证了： 玩家获取传说装备总是越来越难 玩家只要不停的完成任务，总是能获取传说装备 求解，在已知$ P, Q $的情况下，一个玩家集齐$ N $件传说装备所需要完成的任务数的期望值。也就是问一个非洲大酋长要想集齐 SSR，需要开多少个卡包呢。 解题思路 用 $ f(x,i,n) $ 表示初始概率为$ x $，已经获得了$ i $件装备，需要收集$ n $件装备所需完成任务数的期望值，那么 $ f(P,0,N) $ 即为本题答案。 完成当前任务使任务数加 1, 当前任务完成后，有$ x $的几率获得一件装备，$ 1-x $的几率没有获得，故 $$ f(x,i,n)=1+x \cdot f({\lfloor {P \over {2^{i+1}}} \rfloor},i+1,n)+(1-x) \cdot f(x+Q &amp;gt; 1 ? 1 : x+Q,i, n) $$ 当$ i=n 时，f(x,i,n)=0 $，根据以上公式不难写出递归求解程序，注意到 $ n $ 在公式两边是不变的，所以函数参数实际上只需要两个。 public class LegendaryItems { static int P,Q,N; public static void main(String[] args) { Scanner sc = new Scanner(System.in); P = sc.nextInt(); Q = sc.nextInt(); N = sc.nextInt(); System.out.println(String.format(&quot;%.2f&quot;, foo(P / 100.,0))); } private static double foo(double x, int i) { if (i == N) { return 0; } double tmp1, tmp2; if (x &amp;gt; 0){ tmp1 = x * foo( Math.floor(P / Math.pow(2, i + 1)) / 100., i + 1); }else {tmp1 = 0;} if (x &amp;lt; 1){ tmp2 = (1 - x) * foo( x + Q / 100. &amp;gt; 1 ? 1 : x + Q / 100. , i); }else {tmp2 = 0;} return 1 + tmp1 + tmp2; } } 算法优化 虽然这个解法答案是正确的，但是严重超时，即使使用了动态规划常见的打表法进行优化。 优化的关键在于，当一个玩家已经获得了 7 件装备后，他下一个任务完成后获得装备的概率一定是 0。且此后玩家每需获得一件装备所需完成的任务数期望都是一样的。因此，当$ N &amp;gt; 7 $ 时，可以理解成先获取 7 件装备，此后的$ N-7 $件装备的任务数期望是 $ f(0,6,7) $的$ N-7 $倍。$ f(0,6,7) $表示概率为0时，再获取一件装备的任务期望数。 $$ f(x,0,n)=f(x,0,7)+(n-7) \times f(0,6,7) $$ AC 代码 public class LegendaryItems { static int P,Q,N; static Double[][] table = new Double[101][8]; public static void main(String[] args) { Scanner sc = new Scanner(System.in); P = sc.nextInt(); Q = sc.nextInt(); N = sc.nextInt(); if (N &amp;gt; 7) { int m = N - 7; N = 7; System.out.println(String.format(&quot;%.2f&quot;, foo(P / 100.,0) + m * foo(0, 6))); }else{ System.out.println(String.format(&quot;%.2f&quot;, foo(P / 100.,0))); } private static double foo(double x, int i) { if (i == N) { return 0; } if (table[(int) x * 100][i] != null) { return table[(int) x * 100][i]; } double tmp1, tmp2; if (x &amp;gt; 0){ tmp1 = x * foo( Math.floor(P / Math.pow(2, i + 1)) / 100., i + 1); }else {tmp1 = 0;} if (x &amp;lt; 1){ tmp2 = (1 - x) * foo( x + Q / 100. &amp;gt; 1 ? 1 : x + Q / 100. , i); }else {tmp2 = 0;} table[(int) x * 100][i] = 1 + tmp1 + tmp2; return 1 + tmp1 + tmp2; } }</summary></entry><entry><title type="html">炉石竞技场 我能混几场</title><link href="https://blog.bosscang.com/research/2017/03/04/hearthstone.html" rel="alternate" type="text/html" title="炉石竞技场 我能混几场" /><published>2017-03-04T00:00:00+00:00</published><updated>2017-03-04T00:00:00+00:00</updated><id>https://blog.bosscang.com/research/2017/03/04/hearthstone</id><content type="html" xml:base="https://blog.bosscang.com/research/2017/03/04/hearthstone.html">&lt;p&gt;&lt;img src=&quot;https://blog.bosscang.com/img/hearthstone.png&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;
&lt;p&gt;某玩家沉迷炉石不能自拔，虽然实力只有贴吧水平。今天他提出了一个小问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;如果我的胜率是50%，那我能在竞技场里赢几场？&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--more--&gt;
&lt;p&gt;竞技场的比赛规则很有意思：赢满12场或者输满3场即结束游戏。因此分别考虑这两种情况，设赢得比赛的概率为$Q$&lt;/p&gt;
&lt;h3 id=&quot;section&quot;&gt;赢满12场的大神&lt;/h3&gt;
&lt;h4 id=&quot;section-1&quot;&gt;0负12胜的王者玩家&lt;/h4&gt;
&lt;p&gt;这种情况是最简单的，每场都赢，连赢12把&lt;/p&gt;
&lt;p&gt;$$ P_0 = Q^{12} $$&lt;/p&gt;
&lt;h4 id=&quot;section-2&quot;&gt;1负12胜的钻石玩家&lt;/h4&gt;
&lt;p&gt;共计13场比赛，其中最后一把为胜，前12场中不小心输了一把，共有12种输法&lt;/p&gt;
&lt;p&gt;$$ P_1 = C_{12}^1 \times Q^{12} \times (1-Q) $$&lt;/p&gt;
&lt;h4 id=&quot;section-3&quot;&gt;2负12胜的白金玩家&lt;/h4&gt;
&lt;p&gt;共计14场比赛，其中最后一把为胜，前13场中意外输了两场&lt;/p&gt;
&lt;p&gt;$$
P_2 = Q^{12} \times (1-Q)^2 \times C^2_{13}
$$&lt;/p&gt;
&lt;h4 id=&quot;section-4&quot;&gt;输满3场的倔强青铜玩家&lt;/h4&gt;
&lt;p&gt;这些玩家有个共同特点，那就是最后一把输掉了饮恨离场，在此之前可能赢了$ [0,11] $把，但已经输了2把。设赢了 $ n $ 场，那么总共比赛 $ n+3 $，前 $ n+2 $场中赢了$ n $场，有$ C^n_{n+2} $种可能。&lt;/p&gt;
&lt;p&gt;$$
P_n = Q^n \times (1-Q)^3 \times C^n_{n+2}
$$&lt;/p&gt;
&lt;p&gt;综合以上所有情况，一个获胜概率为$Q$的玩家，在竞技场里的获胜数期望为&lt;/p&gt;
&lt;p&gt;$$
E = 12 \times \sum_{i=0}^{2}P_i + \sum_{n=0}^{11}n\times P_n
$$&lt;/p&gt;
&lt;p&gt;当一个玩家是平均水平，即取 $ Q = 0.5 $，带入可得，$ E \approx 2.99 $ 这大概就是为啥3场比赛获胜的奖励和你的入场成本持平的原因吧。&lt;/p&gt;</content><author><name>bosscang</name></author><category term="research" /><category term="algorithm" /><category term="game" /><summary type="html">某玩家沉迷炉石不能自拔，虽然实力只有贴吧水平。今天他提出了一个小问题： &amp;quot;如果我的胜率是50%，那我能在竞技场里赢几场？&amp;quot; 竞技场的比赛规则很有意思：赢满12场或者输满3场即结束游戏。因此分别考虑这两种情况，设赢得比赛的概率为$Q$ 赢满12场的大神 0负12胜的王者玩家 这种情况是最简单的，每场都赢，连赢12把 $$ P_0 = Q^{12} $$ 1负12胜的钻石玩家 共计13场比赛，其中最后一把为胜，前12场中不小心输了一把，共有12种输法 $$ P_1 = C_{12}^1 \times Q^{12} \times (1-Q) $$ 2负12胜的白金玩家 共计14场比赛，其中最后一把为胜，前13场中意外输了两场 $$ P_2 = Q^{12} \times (1-Q)^2 \times C^2_{13} $$ 输满3场的倔强青铜玩家 这些玩家有个共同特点，那就是最后一把输掉了饮恨离场，在此之前可能赢了$ [0,11] $把，但已经输了2把。设赢了 $ n $ 场，那么总共比赛 $ n+3 $，前 $ n+2 $场中赢了$ n $场，有$ C^n_{n+2} $种可能。 $$ P_n = Q^n \times (1-Q)^3 \times C^n_{n+2} $$ 综合以上所有情况，一个获胜概率为$Q$的玩家，在竞技场里的获胜数期望为 $$ E = 12 \times \sum_{i=0}^{2}P_i + \sum_{n=0}^{11}n\times P_n $$ 当一个玩家是平均水平，即取 $ Q = 0.5 $，带入可得，$ E \approx 2.99 $ 这大概就是为啥3场比赛获胜的奖励和你的入场成本持平的原因吧。</summary></entry><entry><title type="html">如何提出对人类很简单而对电脑很难的科学问题</title><link href="https://blog.bosscang.com/computer/2017/01/05/ai.html" rel="alternate" type="text/html" title="如何提出对人类很简单而对电脑很难的科学问题" /><published>2017-01-05T00:00:00+00:00</published><updated>2017-01-05T00:00:00+00:00</updated><id>https://blog.bosscang.com/computer/2017/01/05/ai</id><content type="html" xml:base="https://blog.bosscang.com/computer/2017/01/05/ai.html">&lt;blockquote&gt;
&lt;p&gt;文献：[1] Ernest Davis. How to Write Science Questions that Are Easy for People and Hard for Computers[J]. AI Magazine, 2016, 37(1): 13-22&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;section&quot;&gt;1 标题与概要&lt;/h2&gt;
&lt;p&gt;  标题：&lt;strong&gt;如何提出对人类很简单而对电脑很难的科学问题&lt;/strong&gt;
  概要：如何衡量一个 AI 的智能化程度，是一个很有挑战性的问题。本文作者提出构造了一种测试，测试所用的题目对人类来说并不困难，但是对电脑来说却相反。在论文中，作者讨论了构造这类题目的方法，并将这些题目按难度分为两种：一种是相当于小学四年级水平，另一种相当于高中水平。对于前一种难度相对较低的题目，作者认为 AI 需要有对时间概念、虚构情节、因果关系、人体结构等知识的理解；对于后一种难度的题目，则需要 AI 将科学知识与实验经验相结合。作者指出这套测试方法比现有的标准化测试方法，例如 SAT 和 New York Regents 测试更有意义，因为现有的测试中所采用的题目都是为了难倒人类而设计的，这些题目往往忽略了许多对电脑很难但对人类很简单的因素。&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id=&quot;section-1&quot;&gt;2 研究背景&lt;/h2&gt;
&lt;p&gt;   作者指出，如果想测试 AI 的能力，那么最直接的办法就是使用现有的考试，例如New York Regents 或者 SAT 考试。事实上，已经有一部分人致力于此，Brachman 等人（2005） 提出开发一个能够通过 SAT 考试的程序，Clark，Harrison 和 Balasubramanian（2013） 研究了可以通过New York Regents 四年级科学能力测试的项目，Strickland（2013）提出了开发一个可以通过东京大学入学考试的 AI ，Ohlsson 等人（2013）使用预处理过的韦氏学龄前儿童和小学生智力测验试题，对一套基于 ConceptNet（Havasi，Speer 和 Alonso 2007）开发的系统进行了智力评估。Barker 等人（2004）描述了如何构建一个知识库系统，能够在高中化学跳级考试中取得3分并通过考试。Seo 等人（2015）开发的 GEOS 系统可以回答 SAT 考试中的几何问题，对于官方题库和练习题库，这套系统分别取得了49% 和 61% 的成绩。
  作者认为现有的标准化考试是用来测试人的而不是 AI，人类和 AI 对“困难”的感受恰恰相反。标准化考试中包含了许多对人类而言非常困难，但对电脑来说微不足道的题目，比如对科学术语的解释或者纯粹的数学计算。从另一方面讲，标准化考试中通常不会有“连傻瓜都知道”的常识性问题，然而这些常识恰恰是 AI 所欠缺的。
  作者指出自动生成对人类很简单而对电脑很难的题目是有可能的，CAPTCHA（von Ahn等人 2003）可以自动生成一些人类很容易理解但是电脑却不能理解的图片，然而这只是一个特例。Weston 等人（2015）提出建立一个系统，可以自动生成一些关于常识问题的叙述，然而这套系统需要一个特定的世界模型和语言模型作为输入，不能使用更原始、更普遍的世界模型或者语言模型。
  在排除了使用现有的标准化考试和自动生成题目的可能性后，作者认为唯一可行的办法就是手动地构造这些题目，而且这些题目必须是对人类而言很简单的，否则就会陷入一个强人工智能的悖论。对现有的计算机来说，这些题目是很难的，这种困难来自对常识的理解和推理，而不是来自对自然语言的处理或者视觉图像的理解。作者认为建立这种测试是很有必要的，它可以测量具有自然世界的常识的 AI 的智能程度。
  作者将这种测试称为基于科学问题的基本理解力评估测试(science questions appraising basic understanding - or SQUABU)。在文章中，作者具体介绍了两种测试，分别是 SQUABU-Basic 和 SQUABU-HighSchool。SQUABU-Basic 用来测试 AI 对自然世界基本常识的理解，这些题目对于任何一个发达国家的10岁儿童来说都不成问题。SQUABU-HighSchool 用来测试 AI 是否可以将高中的物理、化学知识与对自然世界的常识整合在一起，这里的题目对于一个接受过高中教育的学生来说并不困难。&lt;/p&gt;
&lt;h2 id=&quot;section-2&quot;&gt;3 研究过程&lt;/h2&gt;
&lt;h3 id=&quot;section-3&quot;&gt;3.1 排除简单问题&lt;/h3&gt;
&lt;p&gt;  作者首先讨论了哪些问题对电脑是简单的，这些问题在 SQUABU 中必须要被排除。这些问题可以归结为三大类：术语解释、分类归纳和纯粹计算。&lt;/p&gt;
&lt;h4 id=&quot;section-4&quot;&gt;3.1.1 术语解释&lt;/h4&gt;
&lt;p&gt;  AI 可以通过检索来获得专业术语的释义。例如这道 New York State 4th grade Regents Science 测试中的题目&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;土壤在风或水的作用下发生运动的现象称为
(A)冷凝 (B)蒸发 (C)侵蚀 (D)摩擦&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  如果使用搜索引擎搜索题干，可以得到许多页面，上面有关于侵蚀作用的定义。&lt;/p&gt;
&lt;h4 id=&quot;section-5&quot;&gt;3.1.2 分类归纳&lt;/h4&gt;
&lt;p&gt;  根据子类和实例间的组织关系构造类别和个体的分类层次结构可以被认为是 AI 中已经解决的问题。这个技术已经在网络数据挖掘中得到大量应用，例如 Wu 等人 （2012）的 Probase 项目将2070万个个体归纳为206万个类别，准确率达到了92.8%。例如下面这个问题就很简单（对计算机而言）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;松鼠没有下列哪一种器官
(A)大脑 (B)鳃 (C)心脏 (D)肺&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;section-6&quot;&gt;3.1.3 纯粹计算&lt;/h4&gt;
&lt;p&gt;  涉及检索标准的公式，然后在计算中（代数或符号计算）使用它们的问题很容易。例如下面是来自 SAT-level 物理考试中的题目。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;闭合电路中的40Ω电阻在其两端有20伏特电压。 流过电阻的电流为
(A)0.5A (B)2A (C)20A (D)80A (E)800A&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;水平力F作用在一质量为m的物体上，该物体起初静止放在摩擦力可以忽略的地板上，在F的作用下，物体在t时间内移动了距离d，则物体的动量变化为
(A)F/t (B)m/t (C)Fd (D)Ft (E)mt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;section-7&quot;&gt;3.2 解决方案&lt;/h3&gt;
&lt;p&gt;  作者分别介绍了 SQUABU 的两种测试，对如何寻找题目来源和构造题目做了详细解释。&lt;/p&gt;
&lt;h4 id=&quot;squabu-basic&quot;&gt;3.2.1 SQUABU-Basic&lt;/h4&gt;
&lt;p&gt;  作者总结了哪些问题对人类简单而对电脑很困难，这些题目并非来自课本，而是自然世界的常识。
&lt;strong&gt;时间概念&lt;/strong&gt;
  作者指出，时间问题计算是 AI 一个已经解决的问题，进行时间推理在很大程度上也被解决了。然而在实际应用中，大规模的知识库系统往往会忽略关于时间概念的问题。ConceptNet 系统（Havasi, Speer, and Alonso 2007）在处理时间问题时，显得毫无章法。作者惊讶地发现，最近一个系统手工注释掉了大量代码，以将时间信息从其输出中排除，作者认为这是一个短视的行为。
  因此，如果一个时间信息没有明确、清晰的表示，AI 系统就很可能难以处理，例如下面这些问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.1 Sally 最喜欢的一头奶牛昨天死了，那么这头奶牛可能在哪天复活？
(A)明天 (B)一周内 (C)一年内 (D)几年内 (E)奶牛永远不活复活&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.2 Malcolm Harrison 是弗吉尼亚周的一个农夫，死于200多年前。在他生前，他的农场里有很多匹马。以下哪个叙述是正确的？
(A)Harrison 的所有马都死了
(B)大部分马都死了，但是少数还活着
(C)大部分马都活着，少部分死了
(D)Harrison 的所有马都可能活着&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.3 四月份的每周一至周五，Mike 从早上9点到下午4点在学校上课。下面哪个叙述是正确的?
(A)从周一早上9点到周二下午4点，Mike总是在学校
(B)从周一早上9点到周二下午4点，Mike都不在学校
(C)从周一下午4点到周五上午9点，Mike都不在学校
(D)从周六上午9点到周一上午8点，Mike都不在学校
(E)从周日下午4点到周二上午9点，Mike都在学校
(F)在不在学校取决于是哪一年&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  对于问题 B.2 AI 也许可以从维基百科上获知一匹马的寿命长度，然而要回答这道题目，还需要能将题目中其他元素组合运用，这就涉及到下面会讨论的“组合元素”。作者认为未来10年内都很难有 AI 可以正确回答这些问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;归纳推理&lt;/strong&gt;
  AI 对于不确定数目的事物序列中的逻辑推理往往表现糟糕，例如下面这几个例子&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.4 Mary 有一只鹦鹉名叫 Paul，那么 Paul 有没有祖先活在公元1750年？
(A)当然有 (B)当然没有 (C)不得而知&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.5 Tim 正在一个布满石头的海滩上，他有一个大桶，他正将石头一块一块放入桶中，下面哪项是真的？
(A)桶里永远不会一块以上的石头
(B)桶里永远不会有三块以上的石头
(C)桶最终会被装满，并且放不下更多的石头
(D)桶里的石头越来越多，但总是有空间放入另一块石头&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;虚假情节&lt;/strong&gt;
  如果你虚构了一个显然不可能的故事，那么人们在看过之后往往不会去抱怨“这是不可能的”。正因如此 AI 在阅读这个故事时，也不会去考虑故事的可能性。
  当然，如果在题目中有“这是不可能的”答案选项，AI 就会去刻意计算情节故事的可能性，因此要用显然是可能的但是毫无意义的情节去迷惑 AI。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.6 可以折叠一个西瓜吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.7 可以把一个西红柿放在西瓜上面吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.8 假设你有一个西红柿和一个完好的西瓜，你可以在不破坏西瓜的前提下将西红柿放到西瓜里面吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.9 以下哪项为真?
(A)一只雌性老鹰和一只雄性鳄鱼可以生育后代，且后代既不是鳄鱼也不是老鹰
(B)一只雌性老鹰和一只雄性鳄鱼可以生育后代，且后代是老鹰
(C)一只雌性老鹰和一只雄性鳄鱼可以生育后代，且后代是鳄鱼
(D)一只雌性老鹰和一只雄性鳄鱼可以生育后代，且后代一半是老鹰一半是鳄鱼
(E)一只雌性老鹰和一只雄性鳄鱼不可以生育后代&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.10 如果你把一只金丝雀和一只鳄鱼放在一起，以下哪项是不可能的？
(A)金丝雀可以看到鳄鱼
(B)鳄鱼可以看到金丝雀
(C)金丝雀可以看到鳄鱼胃里的东西
(D)金丝雀可以飞到鳄鱼背上&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;因果关系&lt;/strong&gt;
  现有的 AI 所使用的数据库，很可能没有包含为人熟知或者很显而易见的因果关系。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.11 假设你有两本书，一本封面是白色的，另一本封面是黑色的，除此以外两本书一模一样。如果你从白色的书中撕掉一页，下面哪项为真？
(A)黑色书中的相同页也会掉落
(B)黑色书中会长出另一页
(C)白色书中会重新长出被撕掉的那页
(D)白色书中的所有其他页都活掉落
(E)以上都不为真&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;时空概念&lt;/strong&gt;
  许多基本的时空观对 AI 来说都很难理解&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.12 Ed 出生时，他的父亲在波士顿，他的母亲在洛杉矶，那么 Ed 出生在哪？
(A)波士顿 (B)洛杉矶 (C)波士顿或洛杉矶 (D)波士顿和洛杉矶之间的某地&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.13 Joanne 从一根奶酪上切下一块，下面哪项为真？
(A)这根奶酪的重量不变
(B)这根奶酪变轻了
(C)这根奶酪变重了
(D)这根奶酪的重量变得不可测量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.14 Joanne 在一根奶酪的中间插了一根长针，然后把它拉出来，下面哪项为真？
(A)奶酪长度不变
(B)奶酪变短了
(C)奶酪变长了
(D)奶酪长度变得不可测量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;组合元素&lt;/strong&gt;
  这种题目需要将来源不同的事实元素组合起来考虑，这对于 AI 来说很困难，问题 B.2 是一个例子，下面是另一个&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.15 George 不小心把一点点漂白剂滴进了牛奶里，如果他小心翼翼的不喝到漂白剂，那么喝牛奶是安全的么？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  这个题目需要将若干个事实元素组合起来，首先漂白剂是有毒的，即使经过了稀释，其次漂白剂和牛奶都是液体，你很难将混合过的两种液体再次分开。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;人体结构&lt;/strong&gt;
  毫无疑问，人类对人体结构的理解有着先天的优势&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.16 当你把手放在脑袋后面时，你能看到你的手吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.17 如果一个人感冒了，那么他可能在 ___ 时间内康复。
(A)几分钟
(B)几天或者几周
(C)几年
(D)永远不会康复&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.18 如果一个人砍掉了他的手指，那么他可能在 ___ 时间内重新长出手指。
(A)几分钟
(B)几天或者几周
(C)几年
(D)他永远不会长出新的手指&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;模糊推理&lt;/strong&gt;
  物理模拟程序很擅长对具有确定数量物体的问题进行推导，但对物体数量不确定的问题就不大行&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.19 有一个瓶子正放在桌子上，瓶盖子盖的很紧，瓶子里有几颗花生。 Joe 拿起瓶子上下摇晃，然后把瓶子放回原处。那么，花生最后在哪里？
(A)在瓶子里
(B)在桌子上，瓶子外面
(C)在空中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem B.20 有一个瓶子正放在桌子上，瓶盖子盖的很紧，桌子上还有几颗花生。 Joe 拿起瓶子上下摇晃，然后把瓶子放回原处。那么，花生最后在哪里？
(A)在瓶子里
(B)在桌子上，瓶子外面
(C)在空中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;squabu-highschool&quot;&gt;3.2.2 SQUABU-HighSchool&lt;/h4&gt;
&lt;p&gt;  SQUABU-HighSchool 测试题与 SQUABU-Basic 有很大的区别， SQUABU-HighSchool 要将科学知识与常识推理结合在一起，因此出题范围变得更加严格。
  作者指出一个很好的题目来源就是高中科学实验，因为实验一方面考察了对科学知识的掌握，另一方面要理解实验的步骤和设置需要有常识推理的能力。另一个很不错的题目来源是天文学，基本的天文学需要掌握基础物理知识，几何推导能力和理性思考能力。第三个题目来源自日常生活中的现象，这些现象的解释需要严谨的科学分析。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;化学实验&lt;/strong&gt;
&lt;img src=&quot;https://blog.bosscang.com/img/chemistry.png&quot; alt=&quot;Alt text&quot; /&gt;
  如图所示，将少许氯酸钾($KClO_3$)放在试管中加热后分解成氯化钾($KCl$)和氧气($O_2$)。将氧气通过导管导入装满水且倒置在水盆里的烧杯中，当烧杯中不再有气泡产生时，实验者上下移动烧杯，使烧杯中的水平面与杯外齐平，此时烧杯内的气压与杯外的大气压相等。减去混合在氧气中的水蒸气体积，即可得到分解产生的氧气体积。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.1 如果U形管的右端在烧杯之外而不在内部，会发生哪些变化？
(A)化学分解将不会发生
(B)氧气将停留在试管中
(C)氧气将进入大气中而不会收集在烧杯中
(D)不会有变化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.2 如果烧杯底部有一个洞，会发生哪些变化？
(A)氧气会从烧杯中冒泡，然后通过洞口进入大气
(B)不会有变化
(C)倒置烧杯中的水会立刻流进盆子里，烧杯中装满了从洞口进入的空气&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.3 如果实验中的试管、烧杯和U型管都是不锈钢的而不是玻璃的，会发生哪些变化？
(A)产生的变化肉眼不可见，可以忽略
(B)化学分解将不会发生
(C)氧气将通过不锈钢烧杯渗出
(D)烧杯会破裂
(E)氯化钾会积累在烧杯中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.4 假设试管中的塞子被移除，但是U形管具有一些其它支撑件，使其保持在其当前位置，会发生哪些变化？
(A)氧气将停留在试管中
(B)所有的氧气都会逃逸到外部空气中
(C)一些氧气将逸出到空气中，还有一些氧气将通过U形管并且冒泡到烧杯。所以烧杯会得到一些氧气，但不是所有的氧气&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.5 假设分解停止时，烧杯中的水位高于盆中的水位，以下哪项为真？
(A)烧杯中的压力低于大气压，烧杯应该降低
(B)烧杯中的压力低于大气压，应该升高烧杯
(C)烧杯中的压力高于大气压，烧杯应该降低
(D)烧杯中的压力高于大气压，烧杯应该升高&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.6 假设氯酸钾不是少量，而是几乎塞满了试管，会发生哪些变化？
(A)分解反应将不会发生
(B)分解产生的氧气多到烧杯装不下
(C)分解产生的氧气少到无法测量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.7 除了烧杯中的气体体积，以下哪一项也需要精确测量？
(A)氯酸钾的初始重量
(B)烧杯的重量
(C)烧杯的直径
(D)气泡的数量和大小
(E)烧杯中液体的体积&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.8 图中实验使用了有刻度的烧杯，如果烧杯没有刻度，会发生哪些变化？
(A)烧杯将无法收集氧气
(B)实验者将无法得知应该升高还是降低烧杯
(C)实验者无法测量气体的体积&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.9 实验开始时，烧杯内装满了水，且杯口在盆中水平面以下，这种状态是如何实现的？
(A)将烧杯装满水，然后立刻倒扣在盆中
(B)将烧杯口向上，然后完全浸没在盆中，等烧杯中装满水后，将烧杯倒置，然后慢慢提出水面
(C)将烧杯口向下，浸入盆中水平面以下，然后提出水面
(D)将烧杯放在图中位置，然后把水溅入烧杯中
(E)将烧杯底部开个小洞，然后用移液管将烧杯中装满水，然后把洞口补上&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;密立根油滴实验&lt;/strong&gt;
&lt;img src=&quot;https://blog.bosscang.com/img/oildrop.png&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.10 如图，在密立根油滴实验中，一个带有单个电子的微小油滴悬浮在两个充电板中间。实验者通过调节板上的电荷量，直到油滴所受电场力与重力相等，使其悬浮。带点板的电荷该如何调节?
(A)两个带电板都是正电荷
(B)两个带电板都是负电荷
(C)上电板为正，下电板为负
(D)上电板为负，下电板为正
(E)无论怎样调节，实验总能成功&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.11 如果油滴开始向上移动，实验者需要？
(A)增加电板的带电量
(B)减少电板的带电量
(C)减少油滴的带电量
(D)增加油滴的重量
(E)降低油滴的重量
(F)增加油滴的带电量
(G)移动下带点板&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.12 如果油滴掉在下带电板上，实验者需要？
(A)增加电板的带电量
(B)减少电板的带电量
(C)增加油滴的带电量
(D)减少油滴的带电量
(E)重新开始实验&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.13 实验的目的是为了证明所有油滴所带的电量均是某一最小电荷的整数倍，而不是小数或其他非整数倍，为了得到这个实验结果，实验者需要测量？
(A)一个油滴
(B)两个油滴
(C)许多油滴&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;天文学&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.14 有没有发生过日食和月食出现在同一天？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.15 有没有人曾在日落后立刻看到月食？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.16 有没有人曾在午夜看到月食？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.17 有没有人曾在中午看到月食？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.18 有没有可能当一个人看到全月食时，地球上另一个人却没有看到月食？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.19 有没有可能当一个人看到全日食时，地球上另一个人却没有看到日食？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.20 假设你站在月亮上，地球就在你的头顶，地球多久会落下？
(A)大约一周
(B)大约两周
(C)大约一个月
(D)地球永远不会落下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.21 假设你站在月亮上，太阳就在你的头顶，多久会日落？
(A)大约一周
(B)大约两周
(C)大约一个月
(D)永远不会日落&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.22 在一个天气明朗的晚上，你盯着一颗星星看，火星就在你和星星的连线上，你能看到这颗星星么？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.23 在一个天气明朗的晚上，你盯着一颗星星看，星星的一颗卫星正好处于你和星星的连线上，你能看到这颗星星么？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.24 假设你站在木星的某颗卫星上，忽略太阳系的其他星球，以下哪项为真？
(A)星空的图案几乎和在地球上看到的一样
(B)星空的图案和在地球上看到的大不相同&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;日常生活现象&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.25 假设你有一个空桶，重量为1公斤，你在其中装入了10克水，和1克盐，然后将桶密封。随之时间推移，桶中的水挥发成水蒸气，留下盐在桶底，此时，整个桶的重量为？
(A)1000克
(B)1001克
(C)1010克
(D)1011克
(E)水在密封的桶内不会挥发&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.26 假设你在一个房间内，温度为17摄氏度，你打开了加热器，半小时后，温度上升到24摄氏度，然后你关闭了加热器。房间的门是关闭的，但是门和门框间存在门缝，空气可以由此进出。假设这段时间内，房间外的温度和气压保持不变，则以下哪项为真？
(A)房间内的气压上升了
(B)房间内的气体体积增加了
(C)有空气进入房间
(D)有空气流出房间
(E)条件不足，无法判断&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.27 题目条件和 H.26 相同，只是房间是完全密闭的，空气无法进出，以下哪项为真？
(A)房间内的气压上升了
(B)房间内的气压降低了
(C)房间内的气体体积增加了
(D)房间内的气体体积减小了
(E)理想气体常数在结束时比在开始时大
(F)理想气体常数在结束时比在开始时小&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Problem H.28 你吹起一个气球，则球中的气压？
(A)比大气压低
(B)等于大气压
(C)比大气压高&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;section-8&quot;&gt;3.3 标准化测试的优缺点&lt;/h3&gt;
&lt;p&gt;  作者在介绍了构建 SQUABU 测试的方法后，又对标准化测试与 SQUABU 测试进行了分析比较。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标准化测试是现成的。这并非不是一个“偷懒的借口”，计算语言学界的研究经验表明，构建完备的测试系统和评价标准需要花费大量精力。当然计算语言学界的人也不会考虑使用 SAT 测试来衡量 NLP(natural language process)的研究进度。&lt;/li&gt;
&lt;li&gt;既当运动员，又当裁判员会引起偏见。如果 AI 的评判标准是由 AI 界的人来制定，那么研究者就会按照他自己对题目的理解来构造 AI 程序。采用原本就是用来测试人类的标准化测试就不会产生这个问题。&lt;/li&gt;
&lt;li&gt;测试的公信力。如果 AI 能够通过现有的标准化测试，那么大众都会承认它的智能性，相反如果通过的只是研究者自己构建的测试，那么势必会有人怀疑。作者觉得这是采用标准化测试最大的优点。然而这也会带来一大弊端，公众会误以为通过了某项考试的 AI 有着和通过这项考试的人类一样的智力水平，假设一个 AI 通过了考察4岁儿童语言能力的测试，公众就会认为这个 AI 具有和4岁儿童一样的智力。然而一个4岁的儿童拥有惊人的创造力、学习力等等，这都是现有的 AI 系统不具备的。&lt;/li&gt;
&lt;li&gt;某些标准化测试，例如 SAT 的题目是不公开的，研究人员只有遵循严格的保密协议才能获取这些题目并研究。作者认为研究者因保密协议带来的损失远大于收益，如果不能公开发表和讨论研究成果，那么采用标准化测试显得毫无意义。&lt;/li&gt;
&lt;li&gt;标准化测试承担了太多的社会职责，因此很多方面受到严格限制。例如题目的难度每年都要尽量一致，题目对于每个考生都要显得公平公正，作者认为 AI 的研究者们不应该受此束缚，而应该自由地发挥创造力，开发 AI 的评价系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;section-9&quot;&gt;4 总结&lt;/h2&gt;
&lt;h3 id=&quot;section-10&quot;&gt;4.1 论文的不足点&lt;/h3&gt;
&lt;p&gt;  论文虽然提出了如何构建一个 AI 的测试系统，然而却没有给出相应的评判标准，作者认为 SQUABU 测试对适龄的正常人类而言都是很简单的，应该可以得到接近满分的成绩。但是对于如何评价 AI 在测试中的表现却没有说明，是答对全部题目，还是答对80% 就可以认为 AI 通过了测试？这个问题在实际应用中还需要解决。
  作者在文章中曾指出，AI 对测试题的阅读不应该成为测试的难点之一，然而 SQUABU 测试中的题目，题干都是使用自然语言描述，甚至还有配套图片。但目前自然语言处理和图形图像分析仍然在研究之中，SQUABU 测试很难避免 AI 系统在阅读理和解题目描述上带来的问题。&lt;/p&gt;
&lt;h3 id=&quot;section-11&quot;&gt;4.2 论文的优点&lt;/h3&gt;
&lt;p&gt;  除去图灵测试，AI 界的研究者们热衷于使用人类社会的标准化测试来测量 AI 系统的智能化程度，本文作者发现这会带来许多问题。一味地追求在标准化测试中获得更高的分数，会将 AI 的研究带入歧途。作者构建的 SQUABU 测试中的许多问题，往往被 AI 研究者所忽视，因为这些题目对人类而言太过简单，简单到研究者甚至没有去考虑 AI 是否可以解决。
  SQUABU 测试着重于测量 AI 的推理能力、对自然常识的理解程度，对人类而言，这些能力可能就像本能一样，然而这正是 AI 所欠缺的，也是构建一个真正的 AI 系统的基石。&lt;/p&gt;
&lt;h3 id=&quot;section-12&quot;&gt;4.3 可能的研究方向&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;制定 SQUABU 测试的评分标准&lt;/li&gt;
&lt;li&gt;构建 SQUABU 测试的题库系统&lt;/li&gt;
&lt;/ul&gt;</content><author><name>bosscang</name></author><category term="computer" /><category term="translation" /><category term="ai" /><summary type="html">文献：[1] Ernest Davis. How to Write Science Questions that Are Easy for People and Hard for Computers[J]. AI Magazine, 2016, 37(1): 13-22</summary></entry><entry><title type="html">随机生成合法字符</title><link href="https://blog.bosscang.com/programming/2016/12/29/randomchar.html" rel="alternate" type="text/html" title="随机生成合法字符" /><published>2016-12-29T00:00:00+00:00</published><updated>2016-12-29T00:00:00+00:00</updated><id>https://blog.bosscang.com/programming/2016/12/29/randomchar</id><content type="html" xml:base="https://blog.bosscang.com/programming/2016/12/29/randomchar.html">&lt;p&gt;将大小写字母与阿拉伯数字称为“合法字符”，如何随机生成这些字符呢?&lt;br /&gt;
显然，合法字符包含 0 ~ 9, A ~ Z, a ~ z 共计 62 个字符，但这些字符在 ASCII 码表中是不连续的，若用$ x,x\in [0,61] $表示随机生成数，$ f(x) $表示合法字符的 ASCII 编码值，则其函数关系为以下分段函数：&lt;/p&gt;
&lt;p&gt;$$
f(x) =
\begin{cases}
x+48,&amp;amp; \text{$0 \le x &amp;lt; 10$} \\
x+48+7,&amp;amp; \text{$10 \le x &amp;lt; 36$} \\
x+48+7+6,&amp;amp; \text{$36 \le x \le 61$}
\end{cases}
$$&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;实现这个分段函数最朴素的方法是使用分支语句&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;62&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;36&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;61&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;另一种思路是寻找分段函数的统一表达式&lt;/p&gt;
&lt;p&gt;令$ x' = x + 48 $,则原函数变为:&lt;/p&gt;
&lt;p&gt;$$
f(x') =
\begin{cases}
x',&amp;amp; \text{$48 \le x' &amp;lt; 58$} \\
x'+7,&amp;amp; \text{$58 \le x' &amp;lt; 84$} \\
x'+7+6,&amp;amp; \text{$84 \le x' \le 109$}
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;设$ P = \lfloor {x' \over 58} \rfloor , Q = \lfloor {x' \over 84} \rfloor $,那么有&lt;/p&gt;
&lt;p&gt;$$
\begin{cases}
P=0,Q=0,&amp;amp; \text{$48 \le x' &amp;lt; 58$} \\
P=1,Q=0,&amp;amp; \text{$58 \le x' &amp;lt; 84$} \\
P=1,Q=1,&amp;amp; \text{$84 \le x' \le 109$}
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;得&lt;/p&gt;
&lt;p&gt;$$
f(x')=x'+\lfloor {x' \over 58} \rfloor \times 7 + \lfloor {x' \over 84} \rfloor  \times 6
$$&lt;/p&gt;
&lt;p&gt;实现代码如下&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;62&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;58&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;84&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>bosscang</name></author><category term="programming" /><category term="algorithm" /><category term="java" /><summary type="html">将大小写字母与阿拉伯数字称为“合法字符”，如何随机生成这些字符呢? 显然，合法字符包含 0 ~ 9, A ~ Z, a ~ z 共计 62 个字符，但这些字符在 ASCII 码表中是不连续的，若用$ x,x\in [0,61] $表示随机生成数，$ f(x) $表示合法字符的 ASCII 编码值，则其函数关系为以下分段函数： $$ f(x) = \begin{cases} x+48,&amp;amp; \text{$0 \le x &amp;lt; 10$} \\ x+48+7,&amp;amp; \text{$10 \le x &amp;lt; 36$} \\ x+48+7+6,&amp;amp; \text{$36 \le x \le 61$} \end{cases} $$ 实现这个分段函数最朴素的方法是使用分支语句 Random random = new Random(); int x = random.nextInt(62); System.out.print((char)( x&amp;lt; 10 ? x + 48 : x &amp;lt; 36 ? x + 55 : x + 61)); 另一种思路是寻找分段函数的统一表达式 令$ x' = x + 48 $,则原函数变为: $$ f(x') = \begin{cases} x',&amp;amp; \text{$48 \le x' &amp;lt; 58$} \\ x'+7,&amp;amp; \text{$58 \le x' &amp;lt; 84$} \\ x'+7+6,&amp;amp; \text{$84 \le x' \le 109$} \end{cases} $$ 设$ P = \lfloor {x' \over 58} \rfloor , Q = \lfloor {x' \over 84} \rfloor $,那么有 $$ \begin{cases} P=0,Q=0,&amp;amp; \text{$48 \le x' &amp;lt; 58$} \\ P=1,Q=0,&amp;amp; \text{$58 \le x' &amp;lt; 84$} \\ P=1,Q=1,&amp;amp; \text{$84 \le x' \le 109$} \end{cases} $$ 得 $$ f(x')=x'+\lfloor {x' \over 58} \rfloor \times 7 + \lfloor {x' \over 84} \rfloor \times 6 $$ 实现代码如下 Random random = new Random(); int x = 48 + random.nextInt(62); System.out.print((char)( x + ( x / 58 ) * 7 + ( x / 84) * 6 ));</summary></entry><entry><title type="html">如何评价 Flappy bird 玩家的游戏水平</title><link href="https://blog.bosscang.com/research/2016/10/10/flppybird.html" rel="alternate" type="text/html" title="如何评价 Flappy bird 玩家的游戏水平" /><published>2016-10-10T00:00:00+00:00</published><updated>2016-10-10T00:00:00+00:00</updated><id>https://blog.bosscang.com/research/2016/10/10/flppybird</id><content type="html" xml:base="https://blog.bosscang.com/research/2016/10/10/flppybird.html">&lt;p&gt;&lt;img src=&quot;https://blog.bosscang.com/img/flappybird.jpg&quot; alt=&quot;enter image description here&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;section&quot;&gt;问题来源：&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Flappy_Bird&quot;&gt;Flappy bird&lt;/a&gt;之类的游戏有一个共同的特点，及玩家的目标是闯过尽量多的关卡，而每个关卡的难度几乎是一样的，不会随着游戏进行显著提高，姑且将此类游戏称之为“连续生存模型”。
那么如何评价一个玩家的水平呢？此类游戏几乎都使用记录历史最佳成绩的方式，这种方式有很强的刺激作用，不同的玩家之间会比较各自的最佳成绩，而玩家自己则会不断试图突破自己的最佳成绩。
但是，最佳成绩的偶然性很大，某次的“超神”发挥之后可能很久都不会达到这样的成绩。不难想到另一个方法是取玩家游戏成绩的平均值，但取平均值会带来评价标准无上限的问题，平均成绩1000的玩家和平均成绩2000的玩家，水平究竟相差多少呢。
那么一个玩家该如何在此类游戏中判断自己的实际水平，又或者说，玩家在开始一局新游戏前应该对此次游戏成绩抱有怎样的期望呢？&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id=&quot;section-1&quot;&gt;问题提出：&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;若一闯关游戏有无限关，玩家每关的存活概率为P，求通关数的期望。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;显然$ 0&amp;lt;P&amp;lt;1 $ ，期望值为 $ 1 \times P + 2 \times P^2 + 3 \times P^3 + \dots + n \times P^n $  ，即&lt;/p&gt;
&lt;p&gt;$$ E =  P + 2 \times P^2 + 3 \times P^3 + \dots + n \times P^n  (n \to \infty) $$&lt;/p&gt;
&lt;p&gt;将上式两边同时乘以 P 并与原式相减，得&lt;/p&gt;
&lt;p&gt;$$ E(1-P) = P + P^2 + P^3+ \dots +P^n - n\times P^{n+1} $$&lt;/p&gt;
&lt;p&gt;由等比数列求和公式得&lt;/p&gt;
&lt;p&gt;$$ E={ P \over {1-P}^2} - {(1+n)P^{n+1} \over {1-P}^2} $$&lt;/p&gt;
&lt;p&gt;其中 $ (1+n)P^{n+1} $ 在 $ n \to \infty $ 时为0，所以&lt;/p&gt;
&lt;p&gt;$$ E =  { P \over {(1-P)}^2} $$&lt;/p&gt;
&lt;p&gt;由此可见，若玩家每关的存活几率是80%，那么其通关数的期望值为20。
反之，如果一个玩家在多次游戏后，其成绩平均值为100，那么其每关的存活几率约为90.49%。&lt;/p&gt;
&lt;p&gt;因此在“连续生存模型”式的游戏中，与其使用平均成绩 $ E $ 来判断玩家水平，不如使用反解以上方程得到的百分制（ $ P \times 100 $ ）评价标准。在这个标准中，玩家的水平被限定在0-100分之间，能得到95分以上的玩家都可谓是大神。&lt;/p&gt;</content><author><name>bosscang</name></author><category term="research" /><category term="algorithm" /><category term="game" /><summary type="html">问题来源： Flappy bird之类的游戏有一个共同的特点，及玩家的目标是闯过尽量多的关卡，而每个关卡的难度几乎是一样的，不会随着游戏进行显著提高，姑且将此类游戏称之为“连续生存模型”。 那么如何评价一个玩家的水平呢？此类游戏几乎都使用记录历史最佳成绩的方式，这种方式有很强的刺激作用，不同的玩家之间会比较各自的最佳成绩，而玩家自己则会不断试图突破自己的最佳成绩。 但是，最佳成绩的偶然性很大，某次的“超神”发挥之后可能很久都不会达到这样的成绩。不难想到另一个方法是取玩家游戏成绩的平均值，但取平均值会带来评价标准无上限的问题，平均成绩1000的玩家和平均成绩2000的玩家，水平究竟相差多少呢。 那么一个玩家该如何在此类游戏中判断自己的实际水平，又或者说，玩家在开始一局新游戏前应该对此次游戏成绩抱有怎样的期望呢？ 问题提出： 若一闯关游戏有无限关，玩家每关的存活概率为P，求通关数的期望。 显然$ 0&amp;lt;P&amp;lt;1 $ ，期望值为 $ 1 \times P + 2 \times P^2 + 3 \times P^3 + \dots + n \times P^n $ ，即 $$ E = P + 2 \times P^2 + 3 \times P^3 + \dots + n \times P^n (n \to \infty) $$ 将上式两边同时乘以 P 并与原式相减，得 $$ E(1-P) = P + P^2 + P^3+ \dots +P^n - n\times P^{n+1} $$ 由等比数列求和公式得 $$ E={ P \over {1-P}^2} - {(1+n)P^{n+1} \over {1-P}^2} $$ 其中 $ (1+n)P^{n+1} $ 在 $ n \to \infty $ 时为0，所以 $$ E = { P \over {(1-P)}^2} $$ 由此可见，若玩家每关的存活几率是80%，那么其通关数的期望值为20。 反之，如果一个玩家在多次游戏后，其成绩平均值为100，那么其每关的存活几率约为90.49%。 因此在“连续生存模型”式的游戏中，与其使用平均成绩 $ E $ 来判断玩家水平，不如使用反解以上方程得到的百分制（ $ P \times 100 $ ）评价标准。在这个标准中，玩家的水平被限定在0-100分之间，能得到95分以上的玩家都可谓是大神。</summary></entry></feed>